{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chatroom/chatroom.component.css","webpack:///./src/app/chatroom/chatroom.component.html","webpack:///./src/app/chatroom/chatroom.component.ts","webpack:///./src/app/contacts/contacts.component.css","webpack:///./src/app/contacts/contacts.component.html","webpack:///./src/app/contacts/contacts.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/services/chat.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/shared/matchPassword.derictive.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n// import { ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n//angular materials\r\n// import {MatListModule} from '@angular/material/list';\r\n// import {MatTabsModule} from '@angular/material/tabs';\r\nimport { Observable } from 'rxjs'\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ContactsComponent } from './contacts/contacts.component';\r\nimport { ChatroomComponent } from './chatroom/chatroom.component';\r\nimport { ChatService } from './services/chat.service';\r\nimport { UserService } from './services/user.service';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nconst routes: Routes = [\r\n  // { path: 'home',     component: HomeComponent },\r\n  // { path: 'home/login',     component: LoginComponent },\r\n  // { path: 'home/register',     component: RegisterComponent },\r\n  {\r\n    path: 'home', component: HomeComponent,\r\n    children: [{ path: 'login', component: LoginComponent },\r\n    { path: 'register', component: RegisterComponent }]\r\n  },\r\n  { path: 'contacts', component: ContactsComponent },\r\n  // { path: 'contacts',  component: ContactsComponent, \r\n  //   children: [{ path: 'chatroom/:user',  component: ChatroomComponent },\r\n  //               { path: 'chatroom',  component: ChatroomComponent }] },\r\n  // { path: 'login',     component: LoginComponent },\r\n  // { path: 'register',     component: },\r\n  { path: 'chatroom', component: ChatroomComponent },\r\n  // { path: 'chatroom/:user',     component: ChatroomComponent },\r\n  { path: '', redirectTo: '/home/login', pathMatch: 'full' },\r\n  { path: '**', redirectTo: '/home/login' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    ContactsComponent,\r\n    ChatroomComponent,\r\n    RegisterComponent,\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forRoot(routes),\r\n    BrowserAnimationsModule,\r\n    // MatListModule,\r\n    // MatTabsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    ChatService,\r\n    UserService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".chatRoom{\\r\\n    height: 100%;\\r\\n    /* width: 100%; */\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n.row{\\r\\n    height: 100%;\\r\\n    /* width: 100%; */\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n.col-12{\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n.chatContent{\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n    /* padding: 20px 0 20px 20px; */\\r\\n}\\r\\n\\r\\n.chatHeader{\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    height: 4rem;\\r\\n    /* padding: .5rem 0; */\\r\\n}\\r\\n\\r\\n.chatHeader a{\\r\\n    margin: 0 2rem;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n/* .chatUserProfile{\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    cursor: pointer;\\r\\n    border-radius:30px;\\r\\n} */\\r\\n\\r\\nimg{\\r\\n    height: 2.8rem;\\r\\n    width: 2.8rem;\\r\\n    border-radius: 50%;\\r\\n}\\r\\n\\r\\n.chatHead{\\r\\n    color: white;\\r\\n    padding: 0 1rem;\\r\\n    font-size: 1.4rem;\\r\\n}\\r\\n\\r\\n.chatContainer{\\r\\n    width: 100%;\\r\\n    /* height: 84vh; */\\r\\n    height: calc(100% - 4rem);\\r\\n    padding: 1rem 1rem 0 1rem;\\r\\n    display: flex;\\r\\n    flex-direction: column-reverse;\\r\\n}\\r\\n\\r\\n.messageBox{\\r\\n    margin:0;\\r\\n    padding: 0 1rem 0 0;\\r\\n    height: calc(100vh - 10rem);\\r\\n    overflow: scroll;\\r\\n    overflow-x: hidden;\\r\\n    display: flex;\\r\\n    flex-direction: column-reverse;\\r\\n}\\r\\n\\r\\n.box{\\r\\n    margin: .2rem 0;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.user2msg{\\r\\n    background: white;\\r\\n    border-radius: 10px;\\r\\n    border-top-left-radius: 0;\\r\\n    padding: .5rem .8rem;\\r\\n    max-width:80%; \\r\\n    color: black;\\r\\n    float: left;\\r\\n    clear: both;\\r\\n    word-wrap: break-word;\\r\\n}\\r\\n\\r\\n.usermsg{\\r\\n    background-image: linear-gradient(to right bottom, #f54b64, #f75b61, #f76960, #f77660, #f78361);\\r\\n    border-radius: 10px;\\r\\n    border-top-right-radius: 0;\\r\\n    padding: .5rem .8rem;\\r\\n    max-width: 80%;\\r\\n    color: white;\\r\\n    float: right;\\r\\n    /* clear: both; */\\r\\n    word-wrap: break-word;\\r\\n    \\r\\n}\\r\\n\\r\\n.sending{\\r\\n    float: right;\\r\\n    margin-left: 15px; \\r\\n    margin-top: 3px;\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n.preloader-wrapper{\\r\\n    /* margin-left: 10px; */\\r\\n    \\r\\n    height: 18px;\\r\\n    width: 18px;\\r\\n}\\r\\n\\r\\n.chatBox{\\r\\n    height: 3rem;\\r\\n    padding: .5rem 0 0 0;\\r\\n    /* padding: .5rem .5rem 0 .5rem; */\\r\\n    display: flex;\\r\\n    align-items: inherit;\\r\\n    justify-content: space-between;\\r\\n}\\r\\n\\r\\n.input-field{\\r\\n    width: 100%;\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\ntextarea{\\r\\n    width: 100%;\\r\\n    padding: .5rem 1rem;\\r\\n    margin: 0;\\r\\n    border-radius: 10px;\\r\\n    font-family: 'Source Sans Pro', sans-serif;\\r\\n    /* font-size: 16px; */\\r\\n    color: #fff;\\r\\n    border: none;\\r\\n    background-color: #495063;\\r\\n    resize: none;\\r\\n}\\r\\n\\r\\n.btn{\\r\\n    /* height: 2rem;\\r\\n    width: 2rem; */\\r\\n    background-image: linear-gradient(to right bottom, #f54b64, #f75b61, #f76960, #f77660, #f78361);\\r\\n    /* padding: 12px; */\\r\\n    border: none;\\r\\n    border-radius: 50%;\\r\\n    margin-left: 1rem;\\r\\n}\\r\\n\\r\\n.btn:focus{\\r\\n    outline: none;\\r\\n}\\r\\n\\r\\ni{\\r\\n    font-size: 1rem;\\r\\n    color: #fff;\\r\\n}\\r\\n\\r\\n/* .chevron{\\r\\n    font-size: 40px;\\r\\n} */\\r\\n\\r\\na{\\r\\n    text-decoration: none;\\r\\n    -webkit-tap-highlight-color: transparent;\\r\\n}\\r\\n\\r\\n.btn:focus, textarea:focus{\\r\\n    outline: none;\\r\\n}\\r\\n\\r\\n::-webkit-scrollbar {\\r\\n    width: 5px;\\r\\n}\\r\\n\\r\\n::-webkit-scrollbar-track {\\r\\n    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3); \\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n::-webkit-scrollbar-thumb {\\r\\n    border-radius: 10px;\\r\\n    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5); \\r\\n}\\r\\n\\r\\n@media (max-width: 767px){\\r\\n    .chatContainer{\\r\\n        padding: 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media (max-width: 576px){\\r\\n    .chatRoom{\\r\\n        margin: 0 auto;\\r\\n    }\\r\\n    .col-12{\\r\\n        padding: 1rem;\\r\\n    }\\r\\n    .chatHeader a{\\r\\n        margin-left: 0;\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"chatRoom container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <div class=\\\"chatContent\\\">\\r\\n        <div class=\\\"chatHeader\\\">\\r\\n          <a routerLink=\\\"/contacts\\\"><i class=\\\"fas fa-chevron-left\\\"></i></a>\\r\\n            <img src={{chatuser.profilePicUrl}} alt=\\\"\\\">\\r\\n            <span class=\\\"chatHead\\\">{{chatuser.username}}</span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"chatContainer\\\">\\r\\n          <div class=\\\"chatBox\\\">\\r\\n            <!-- <div class=\\\"input-field\\\"> -->\\r\\n              <textarea rows=\\\"1\\\" [(ngModel)]=\\\"textMsg\\\" placeholder=\\\"Type your message here\\\"></textarea>\\r\\n            <!-- </div> -->\\r\\n            <!--(keyup)=\\\"do_resize(this.textMsg)\\\" -->\\r\\n            <button class=\\\"btn\\\" (click)=\\\"onSubmit()\\\"><i class=\\\"fas fa-location-arrow\\\"></i></button>\\r\\n          </div>\\r\\n          <div class=\\\"messageBox\\\">\\r\\n            <div class=\\\"box\\\" *ngFor=\\\"let message of messages\\\">\\r\\n              <div class=\\\"usermsg\\\" *ngIf=\\\"message.user=='user1'; else elseBlock\\\">\\r\\n                {{message.msg}}\\r\\n                <div class=\\\"sending\\\" *ngIf=\\\"sending\\\">\\r\\n                  <div class=\\\"preloader-wrapper small active\\\">\\r\\n                    <div class=\\\"spinner-layer spinner-blue-only\\\">\\r\\n                      <div class=\\\"circle-clipper left\\\">\\r\\n                        <div class=\\\"circle\\\"></div>\\r\\n                      </div>\\r\\n                      <div class=\\\"gap-patch\\\">\\r\\n                        <div class=\\\"circle\\\"></div>\\r\\n                      </div>\\r\\n                      <div class=\\\"circle-clipper right\\\">\\r\\n                        <div class=\\\"circle\\\"></div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <ng-template #elseBlock>\\r\\n                <div class=\\\"user2msg\\\">\\r\\n                  {{message.msg}}\\r\\n                </div>\\r\\n              </ng-template>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- <div class=\\\"col-lg-1\\\"></div> -->\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n// import * as $ from 'jquery';\r\nimport * as io from 'socket.io-client';\r\nimport { UserService } from '../services/user.service';\r\nimport { ChatService } from '../services/chat.service';\r\nimport { user } from '../models/user';\r\n\r\n@Component({\r\n  selector: 'app-chatroom',\r\n  templateUrl: './chatroom.component.html',\r\n  styleUrls: ['./chatroom.component.css']\r\n})\r\nexport class ChatroomComponent implements OnInit {\r\n\r\n  messages = [];\r\n  chatuser: user = {\r\n    _id: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    profilePicUrl: \"\",\r\n    friends: null,\r\n    requests: null\r\n  };\r\n  socket: any;\r\n  user: user;\r\n  chatRoomName: string;\r\n\r\n  constructor(private _userService: UserService, private _chatService: ChatService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    //initialise socket.io\r\n    this.socket = io('/');\r\n\r\n    this._chatService.chatroomUser.subscribe((data) => {\r\n      this.chatuser = data;\r\n      this.chatRoomName = this.user._id > this.chatuser._id ? this.user._id + \".\" + this.chatuser._id : this.chatuser._id + \".\" + this.user._id;\r\n      console.log(this.chatRoomName);\r\n      this.socket.emit(\"joinPC\", { room: this.chatRoomName });\r\n\r\n      // console.log(this.chatuser);\r\n    });\r\n\r\n    this.user = this._userService.getUser();\r\n    this.chatuser = this._chatService.getChatUser();\r\n\r\n    console.log(\"initialize\");\r\n\r\n    this.chatRoomName = this.user._id > this.chatuser._id ? this.user._id + \".\" + this.chatuser._id : this.chatuser._id + \".\" + this.user._id;\r\n\r\n    // this.user = this.userService.getUser().username;\r\n\r\n    // var socketOnInit = this.socket;\r\n    this.socket.on('connect', () => {\r\n      console.log(\"connection made\");\r\n      this.socket.emit(\"joinPC\", { room: this.chatRoomName });\r\n    });\r\n\r\n    this.socket.on('chatMsg', (data) => {\r\n      // console.log(data);\r\n      if (data.sender != this.user._id) {\r\n        this.messages.unshift({\r\n          \"user\": \"user2\",\r\n          \"msg\": data.chatMsg\r\n        })\r\n      } else {\r\n        // this.messages.unshift({\r\n        //   \"user\": \"user1\",\r\n        //   \"msg\": this.textMsg\r\n        // })\r\n      }\r\n    });\r\n  }\r\n\r\n  rows: number = 1;\r\n  // do_resize(textbox) {\r\n  //   console.log(textbox);\r\n  //   // let maxrows: number = 3;\r\n  //   // let txt = textbox;\r\n  //   let cols: number = 34;\r\n\r\n  //   // var arraytxt = txt.split('\\n');\r\n  //   // let rows: number = arraytxt.length;\r\n\r\n  //   // for (let i = 0; i < arraytxt.length; i++) {\r\n  //   //   rows += arraytxt[i].length / cols;\r\n  //   // }\r\n  //   if (textbox.length > cols) {\r\n  //     if ((textbox.length % cols) > 0) {\r\n  //       if (this.rows < 3)\r\n  //         this.rows++;\r\n  //     }\r\n  //   }\r\n\r\n  // }\r\n\r\n  textMsg: string = \"\";\r\n\r\n  onSubmit() {\r\n    // console.log(this.textMsg);\r\n    if (this.textMsg.trim().length > 0) {\r\n      this.socket.emit('message', {\r\n        text: this.textMsg,\r\n        room: this.chatRoomName,\r\n        sender: this.user._id,\r\n        receiver: this.chatuser._id\r\n      });\r\n      this.messages.unshift({\r\n        \"user\": \"user1\",\r\n        \"msg\": this.textMsg\r\n      })\r\n      this.textMsg = \"\";\r\n      this._chatService.sendText(this.chatRoomName, { \"sender\": this.user._id, \"messageBody\": this.textMsg }).subscribe((data) => {\r\n\r\n      });\r\n      // this.do_resize($('#textMsg'));\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \".container-fluid{\\r\\n    height: 100vh;\\r\\n    width: 100%;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n}\\r\\n.row{\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    height: 100vh;\\r\\n}\\r\\n.col{\\r\\n    padding: 1rem;\\r\\n    height: 100vh;\\r\\n}\\r\\n.contactsContent{\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n}\\r\\n.contactsHeader{\\r\\n    /* padding:0 20px 0 0; */\\r\\n}\\r\\n.contactsHead{\\r\\n    color: white;\\r\\n    /* padding: 5px 0px; */\\r\\n    font-size: 1.5rem;\\r\\n}\\r\\n.search{\\r\\n    float: right;\\r\\n    /* position: absolute; */\\r\\n    margin: 4px;\\r\\n    font-family: 'Source Sans Pro', sans-serif;\\r\\n    padding: 5px 10px;\\r\\n    border: none;\\r\\n    border-radius: 50px;\\r\\n    font-size: 18px;\\r\\n    width: 0;\\r\\n}\\r\\n.btn{\\r\\n    float: right;\\r\\n    /* position: absolute; */\\r\\n    background: #9c5aec;\\r\\n    /* padding: 10px; */\\r\\n    height: 40px;\\r\\n    width: 40px;\\r\\n    line-height: 15px;\\r\\n    border: none;\\r\\n    border-radius: 50%;\\r\\n    z-index: 9;\\r\\n}\\r\\ni{\\r\\n    color: #fff;\\r\\n    font-size: 20px;\\r\\n}\\r\\n.btn:focus, .search:focus, .list-group-item:focus{\\r\\n    outline: none;\\r\\n}\\r\\n.contactList{\\r\\n    height: calc(100% - 2rem);\\r\\n    overflow: scroll;\\r\\n    overflow-x: hidden;\\r\\n}\\r\\n.contact-collection{\\r\\n    padding-top: 1rem;\\r\\n    margin: 0;\\r\\n    border: none;\\r\\n}\\r\\n.contact-item{\\r\\n    /* background: transparent; */\\r\\n    padding: .7rem 0;\\r\\n    margin: 0;\\r\\n    cursor: pointer;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    border-bottom: 1px solid rgba(100, 100, 100, 0.5);\\r\\n}\\r\\n.img{\\r\\n    width: 2.8rem;\\r\\n    border-radius: 50%;\\r\\n}\\r\\nimg{\\r\\n    border-radius: 50%;\\r\\n    z-index: -1;\\r\\n}\\r\\n.online{\\r\\n    color: #fff;\\r\\n}\\r\\n/* img{\\r\\n    height: 55px;\\r\\n    width: 55px;\\r\\n    border-radius: 50%;\\r\\n} */\\r\\n.contactsName{\\r\\n    font-size: 1.1rem;\\r\\n    padding: .5rem 1rem;\\r\\n    margin: 0;\\r\\n    color: white;\\r\\n    /* width: 95%; */\\r\\n    /* border-top-left-radius: 15px;\\r\\n    border-bottom-left-radius: 15px; */\\r\\n    /* float: right; */\\r\\n    /* width: 100%; */\\r\\n}\\r\\n::-webkit-scrollbar {\\r\\n    width: 5px;\\r\\n}\\r\\n::-webkit-scrollbar-track {\\r\\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3); \\r\\n    border-radius: 5px;\\r\\n}\\r\\n::-webkit-scrollbar-thumb {\\r\\n    border-radius: 10px;\\r\\n    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.8); \\r\\n}\\r\\n.contact-chatroom{\\r\\n    background-color: #242a38;\\r\\n}\\r\\n@media screen and (max-width: 576px) {\\r\\n    .contact-chatroom {\\r\\n      display: none;\\r\\n    }\\r\\n  }\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col col-12 col-sm-6 col-md-5 col-lg-4\\\">\\r\\n      <div class=\\\"contactsContent\\\">\\r\\n        <div class=\\\"contactsHeader\\\">\\r\\n          <span class=\\\"contactsHead\\\">Contacts</span>\\r\\n          <!-- <input type=\\\"text\\\" name=\\\"search\\\" placeholder=\\\"Search\\\" class=\\\"search\\\" id=\\\"search\\\"> -->\\r\\n          <!-- <button onclick=\\\"search()\\\" class=\\\"btn\\\"><i class=\\\"fas fa-search\\\"></i></button> -->\\r\\n        </div>\\r\\n        <div class=\\\"contactList\\\">\\r\\n          <ul class=\\\"contact-collection\\\">\\r\\n            <li class=\\\"contact-item\\\" *ngFor=\\\"let contact of contacts\\\" (click)=\\\"onClick(contact)\\\">\\r\\n              <div class=\\\"img\\\" (click)=\\\"openImgBox(contact.pic)\\\"><img src={{contact.profilePicUrl}} class=\\\"img-fluid\\\">\\r\\n              </div>\\r\\n              <p class=\\\"contactsName\\\" >{{contact.username}}</p>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col contact-chatroom\\\">\\r\\n      <app-chatroom></app-chatroom>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n// import { $ } from 'protractor';\r\nimport * as $ from 'jquery';\r\nimport { UserService } from '../services/user.service';\r\nimport { ChatService } from '../services/chat.service';\r\nimport { user } from '../models/user';\r\n\r\n@Component({\r\n  selector: 'app-contacts',\r\n  templateUrl: './contacts.component.html',\r\n  styleUrls: ['./contacts.component.css']\r\n})\r\nexport class ContactsComponent implements OnInit {\r\n\r\n  contacts: any = [];\r\n  user: user;\r\n  constructor(private _route: Router, private _userService: UserService, private _chatService: ChatService) {\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    // this.user = this._userService.getUser();\r\n    // console.log(JSON.parse(localStorage.getItem(\"isLoggedIn\")));\r\n    // this.contacts = this._userService.getUser().friends;\r\n\r\n    // this.contacts = this._chatService.getContacts(this.user.username);\r\n\r\n    this._userService.getAllUser().subscribe((data) => {\r\n      this.contacts = data;\r\n    },(err)=>{\r\n      console.log(err);\r\n    });\r\n\r\n    // this._userService.chatroomUser.emit(this.contacts[0]);\r\n    // console.log(this.contacts[0]);\r\n  }\r\n\r\n\r\n  onClick(contact:user) {\r\n    console.log(contact);\r\n    this._chatService.chatroomUser.emit(contact);\r\n    this._chatService.setChatUser(contact);\r\n    if ($(window).outerWidth() < 576) {\r\n      this._route.navigate([\"/chatroom\"]);\r\n    }\r\n    // else {\r\n    //   // this._route.navigate([\"contacts/chatroom\"], { queryParams: contact });\r\n    //   this._route.navigate([\"contacts/chatroom\"]);\r\n    // }\r\n\r\n  }\r\n\r\n  openImgBox(contactPic) {\r\n    console.log(contactPic);\r\n  }\r\n\r\n}\r\n","module.exports = \".bodycontent{\\r\\n    width: 100%;\\r\\n    height: 100vh;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    background: url('bg1.jpg') center center;\\r\\n    background-size: cover;\\r\\n}\\r\\n.col-md-6{\\r\\n    height: 100vh;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    flex-direction: column;\\r\\n}\\r\\n.row{\\r\\n    width: 100%;\\r\\n    height: 100vh;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n@media (max-width: 576px){\\r\\n    .home-bg-div{\\r\\n        display: none;\\r\\n    }\\r\\n}\"","module.exports = \"<div class=\\\"bodycontent container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-4 col-md-6 col-lg-7 home-bg-div\\\">\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-8 col-md-6 col-lg-5\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  // registerWindow = false;\r\n  loginWindow = true;\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    // this.userService.window.subscribe((data) => {\r\n    //   console.log(data);\r\n    //   if (data == \"register\")\r\n    //     this.loginWindow = false;\r\n    // });\r\n  }\r\n\r\n  // changeWindow() {\r\n  //   this.loginWindow = !this.loginWindow;\r\n  // }\r\n\r\n}\r\n","module.exports = \"\\r\\n.box{\\r\\n    background: #20242f91;\\r\\n    padding: 3rem 2rem 1rem 2rem;\\r\\n    border-radius: 10px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\ninput{\\r\\n    margin: .5rem 0;\\r\\n    padding: .5rem 1rem;\\r\\n    width: 100%;\\r\\n    color: white;\\r\\n    background-color: #49506371;\\r\\n    border: none;\\r\\n    border-radius: 20px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\ninput:focus{\\r\\n    outline: none;\\r\\n}\\r\\n\\r\\n.btn{\\r\\n    width: 100%;\\r\\n    padding: .5rem;\\r\\n    text-align: center;\\r\\n    border: none;\\r\\n    margin: .5rem 0;\\r\\n    border-radius: 20px;\\r\\n    color: #fff;\\r\\n    background-image: linear-gradient(to right bottom, #f54b64, #f75b61, #f76960, #f77660, #f78361);\\r\\n\\r\\n}\\r\\n\\r\\np{\\r\\n    margin-top: 2rem;\\r\\n    color: #fff;\\r\\n    font-size: .8rem;\\r\\n    text-decoration: none;\\r\\n    cursor: pointer;\\r\\n}\"","module.exports = \"<div class=\\\"box\\\">\\r\\n\\r\\n<p *ngIf=\\\"status\\\">{{status}}</p>\\r\\n    <input type=\\\"text\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.username\\\" placeholder=\\\"Username\\\" id=\\\"username\\\" autocomplete=\\\"off\\\" required>\\r\\n      <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" placeholder=\\\"Password\\\" id=\\\"password\\\" required>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"login()\\\" class=\\\"btn\\\">Login <i class=\\\"fas fa-sign-in-alt\\\"></i></button>\\r\\n    <!-- <a class=\\\"btn waves-effect waves-light\\\" (click)=\\\"login()\\\" >Login\\r\\n        <i class=\\\"material-icons\\\">exit_to_app</i>\\r\\n    </a> -->\\r\\n  <!-- </div> -->\\r\\n  <!-- </form> -->\\r\\n  \\r\\n  <p><a (click)=\\\"routeTo()\\\">New user? Create Account</a></p>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, Route } from '@angular/router';\r\nimport * as io from 'socket.io-client';\r\nimport * as $ from 'jquery';\r\nimport { UserService } from '../services/user.service';\r\nimport { user } from '../models/user'\r\nimport Swal from 'sweetalert2'\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  // socket: any;\r\n  constructor(private _route: Router, private _userService: UserService) {\r\n    // this.socket = io('http://localhost:3000');\r\n\r\n    // this.socket.on('connect', function () {\r\n    //   console.log(\"connection made\");\r\n    // });\r\n\r\n    // this.socket.on('newmsg', (data) => {\r\n    //   console.log(data);\r\n    // });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  status: string;\r\n\r\n  user = {\r\n    username: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n\r\n  login() {\r\n    this._userService.loginUser(this.user).subscribe(\r\n      (data: any) => {\r\n        //when login successful\r\n        if (data.username) {\r\n          this._userService.setUser(data);\r\n          localStorage.setItem(\"LoggedInUser\", JSON.stringify(data));\r\n          this._route.navigate([\"contacts\"]);\r\n        } else {\r\n          this.status=data.status;\r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    )\r\n    // Make sure the client is loaded and sign-in is complete before calling this method.\r\n    // this._route.navigate([\"contacts\"]);\r\n  }\r\n\r\n  routeTo() {\r\n    this._route.navigate([\"home/register\"]);\r\n  }\r\n}\r\n","module.exports = \"\\r\\n.box{\\r\\n    background: #20242f91;\\r\\n    padding: 3rem 2rem 1rem 2rem;\\r\\n    border-radius: 10px;\\r\\n    text-align: center;\\r\\n}\\r\\ninput{\\r\\n    margin: .5rem 0;\\r\\n    padding: .5rem 1rem;\\r\\n    width: 100%;\\r\\n    color: white;\\r\\n    background-color: #49506371;\\r\\n    border: none;\\r\\n    border-radius: 20px;\\r\\n    text-align: center;\\r\\n}\\r\\ninput:focus{\\r\\n    outline: none;\\r\\n}\\r\\nbutton:disabled,\\r\\nbutton[disabled]{\\r\\n    cursor: not-allowed;\\r\\n}\\r\\n.btn{\\r\\n    width: 100%;\\r\\n    padding: .5rem;\\r\\n    text-align: center;\\r\\n    border: none;\\r\\n    margin: .5rem 0;\\r\\n    border-radius: 20px;\\r\\n    color: #fff;\\r\\n    background-image: linear-gradient(to right bottom, #f54b64, #f75b61, #f76960, #f77660, #f78361);\\r\\n\\r\\n}\\r\\np{\\r\\n    margin-top: 2rem;\\r\\n    color: #fff;\\r\\n    font-size: .8rem;\\r\\n    text-decoration: none;\\r\\n    cursor: pointer;\\r\\n}\"","module.exports = \"<div class=\\\"box\\\">\\r\\n\\r\\n  <p *ngIf=\\\"status\\\">{{status}}</p>\\r\\n  <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit(registerForm.value)\\\">\\r\\n\\r\\n    <input type=\\\"text\\\" formControlName=\\\"username\\\" id=\\\"username\\\" placeholder=\\\"Username\\\" autocomplete=\\\"off\\\" required\\r\\n      maxlength=\\\"20\\\">\\r\\n\\r\\n    <input type=\\\"password\\\" formControlName=\\\"password\\\" id=\\\"password\\\" placeholder=\\\"Password\\\" required maxlength=\\\"20\\\">\\r\\n\\r\\n    <input type=\\\"password\\\" formControlName=\\\"confirmpassword\\\" id=\\\"confirmpassword\\\" placeholder=\\\"ConfirmPassword\\\" required\\r\\n      maxlength=\\\"20\\\">\\r\\n\\r\\n    <button type=\\\"submit\\\" [disabled]=\\\"!registerForm.valid\\\" class=\\\"btn\\\">Register <i class=\\\"material-icons\\\"></i></button>\\r\\n  </form>\\r\\n\\r\\n  <p><a (click)=\\\"routeTo()\\\">Already have an account? Sign in</a></p>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../services/user.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { matchPassword } from '../shared/matchPassword.derictive';\r\nimport { Router } from '@angular/router';\r\nimport { user } from '../models/user';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  user: user = {\r\n    _id:\"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    profilePicUrl: \"../../assets/images/defaultProfile.png\",\r\n    friends: [],\r\n    requests: [],\r\n  };\r\n\r\n  status:string;\r\n  \r\n  constructor(private _userService: UserService, private _route: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  registerForm = new FormGroup({\r\n    username: new FormControl('',[Validators.required,Validators.minLength(4)]),\r\n    password: new FormControl('',[Validators.required,Validators.minLength(4)]),\r\n    confirmpassword: new FormControl('',[Validators.required,Validators.minLength(4)])\r\n  },{ validators: matchPassword });\r\n\r\n  onSubmit(value){\r\n    this.user.username=value.username;\r\n    this.user.password=value.password;\r\n    console.log(value);\r\n    console.log(this.user);\r\n    this._userService.registerUser(this.user).subscribe((data:any)=>{\r\n      if(data.username){\r\n        this._userService.setUser(data);\r\n        localStorage.setItem(\"LoggedInUser\", JSON.stringify(data));\r\n        this._route.navigate([\"contacts\"]);\r\n      }else{\r\n        this.status=data.status;\r\n      }\r\n    },\r\n    (err)=>{\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  routeTo(){\r\n    this._route.navigate([\"home/login\"]);\r\n  }\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { user } from '../models/user';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatService {\r\n\r\n\r\n\r\n  contacts = [\r\n    {\r\n      \"user\": \"Sanket\",\r\n      \"pic\": \"../../assets/images/s.jpg\"\r\n    },\r\n    {\r\n      \"user\": \"Riddhi\",\r\n      \"pic\": \"../../assets/images/r.jpg\"\r\n    },\r\n    {\r\n      \"user\": \"Sanket\",\r\n      \"pic\": \"../../assets/images/s.jpg\"\r\n    },\r\n    {\r\n      \"user\": \"Riddhi\",\r\n      \"pic\": \"../../assets/images/r.jpg\"\r\n    },\r\n    {\r\n      \"user\": \"Sanket\",\r\n      \"pic\": \"../../assets/images/s.jpg\"\r\n    },\r\n    {\r\n      \"user\": \"Riddhi\",\r\n      \"pic\": \"../../assets/images/r.jpg\"\r\n    },\r\n    {\r\n      \"user\": \"Sanket\",\r\n      \"pic\": \"../../assets/images/s.jpg\"\r\n    },\r\n    {\r\n      \"user\": \"Riddhi\",\r\n      \"pic\": \"../../assets/images/r.jpg\"\r\n    },\r\n    {\r\n      \"user\": \"Sanket\",\r\n      \"pic\": \"../../assets/images/s.jpg\"\r\n    },\r\n    {\r\n      \"user\": \"Riddhi\",\r\n      \"pic\": \"../../assets/images/r.jpg\"\r\n    },\r\n    {\r\n      \"user\": \"Sanket\",\r\n      \"pic\": \"../../assets/images/s.jpg\"\r\n    },\r\n    {\r\n      \"user\": \"Riddhi\",\r\n      \"pic\": \"../../assets/images/r.jpg\"\r\n    }\r\n  ]\r\n\r\n  chatuser: user = {\r\n    _id: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    profilePicUrl: \"\",\r\n    friends: null,\r\n    requests: null\r\n  };\r\n\r\n  chatroomUser = new EventEmitter();  //chatroom user details\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  // getContacts(username) {\r\n  //   return this.contacts.filter(contact => contact.user.toLowerCase() != username.toLowerCase());\r\n  // }\r\n\r\n  sendText(chatRoomName, message) {\r\n    return this.http.post(\"/chats/\"+chatRoomName , message);\r\n  }\r\n  getMessages(chatRoomName){\r\n    return this.http.get(\"/chats/\"+chatRoomName);\r\n  }\r\n\r\n  setChatUser(chatuser) {\r\n    this.chatuser = chatuser;\r\n  }\r\n\r\n  getChatUser() {\r\n    return this.chatuser;\r\n  }\r\n\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n// import { HttpHeaders } from '@angular/common/http';\r\nimport \"rxjs/add/operator/map\";\r\nimport { user } from '../models/user';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  user: user;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  loginUser(user) {\r\n    return this.http.post(\"/user/login\", user);\r\n  }\r\n\r\n  registerUser(user: user) {\r\n    return this.http.post(\"/user/register\", user);\r\n  }\r\n\r\n  getAllUser(){\r\n    return this.http.get(\"/user/allusers\");\r\n  }\r\n\r\n  setUser(user) {\r\n    this.user = user;\r\n  }\r\n  getUser() {\r\n    return this.user;\r\n  }\r\n}\r\n","import { ValidatorFn, FormGroup, ValidationErrors } from \"@angular/forms\";\r\n\r\nexport const matchPassword:ValidatorFn=(control:FormGroup):ValidationErrors|null=>{\r\n    const password=control.get(\"password\");\r\n    const confirmPassword=control.get(\"confirmpassword\");\r\n    \r\n    return password.value==confirmPassword.value?null:{passwordNotMatched:true};\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","/* (ignored) */"],"sourceRoot":""}